From b206dd780e2fc5ce2fd44fa07a9abbf000dc608f Mon Sep 17 00:00:00 2001
From: Bernd Kuhls <bernd.kuhls@t-online.de>
Date: Sun, 12 Feb 2017 14:24:18 +0100
Subject: [PATCH 1/1] cmake: add FindIconv.cmake

This patch adds support for libiconv on non-WIN32 platforms  currently
only provided by the autoconf-based build system:
https://github.com/xbmc/xbmc/blob/Krypton/configure.ac#L1172

This commit fixes an error during linking with an uClibc-based
buildroot toolchain:

[100%] Linking CXX executable kodi.bin
/home/buildroot/br8_ffmpeg3_kodi17_github/output/host/usr/lib/gcc/i586-buildroot-linux-uclibc/6.3.0/../../../../i586-buildroot-linux-uclibc/bin/ld: build/utils/utils.a(CharsetConverter.cpp.o): undefined reference to symbol 'libiconv_open'
/home/buildroot/br8_ffmpeg3_kodi17_github/output/host/usr/i586-buildroot-linux-uclibc/sysroot/usr/lib32/libiconv.so.2: error adding symbols: DSO missing from command line

Signed-off-by: Bernd Kuhls <bernd.kuhls@t-online.de>
---
 project/cmake/CMakeLists.txt          |   2 +-
 project/cmake/modules/FindIconv.cmake | 124 ++++++++++++++++++++++++++++++++++
 2 files changed, 125 insertions(+), 1 deletion(-)
 create mode 100644 project/cmake/modules/FindIconv.cmake

diff --git a/project/cmake/CMakeLists.txt b/project/cmake/CMakeLists.txt
index 504e4c046b..90ffa35ea7 100644
--- a/project/cmake/CMakeLists.txt
+++ b/project/cmake/CMakeLists.txt
@@ -106,7 +106,7 @@ set(required_deps Sqlite3 FreeType PCRE Cpluff LibDvd
                   TinyXML Python Yajl Cdio
                   Lzo2 Fribidi TagLib FFMPEG CrossGUID)
 if(NOT WIN32)
-  list(APPEND required_deps ZLIB)
+  list(APPEND required_deps ZLIB Iconv)
 else()
   list(APPEND required_deps D3DX11Effects)
 endif()
diff --git a/project/cmake/modules/FindIconv.cmake b/project/cmake/modules/FindIconv.cmake
new file mode 100644
index 0000000000..51e4f14c1a
--- /dev/null
+++ b/project/cmake/modules/FindIconv.cmake
@@ -0,0 +1,124 @@
+# based on
+# https://github.com/doxygen/doxygen/blob/master/cmake/FindIconv.cmake
+
+# vim:ts=4:sw=4:expandtab:autoindent:
+#
+# The MIT License
+#
+# Copyright (c) 2008, 2009 Flusspferd contributors (see "CONTRIBUTORS" or
+#                                      http://flusspferd.org/contributors.txt)
+#
+# Permission is hereby granted, free of charge, to any person obtaining a copy
+# of this software and associated documentation files (the "Software"), to deal
+# in the Software without restriction, including without limitation the rights
+# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+# copies of the Software, and to permit persons to whom the Software is
+# furnished to do so, subject to the following conditions:
+#
+# The above copyright notice and this permission notice shall be included in
+# all copies or substantial portions of the Software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+# THE SOFTWARE.
+#
+
+Include(CheckFunctionExists)
+include(CheckCXXSourceCompiles)
+
+if(ICONV_INCLUDE_DIR)
+  set(ICONV_FIND_QUIETLY TRUE)
+endif()
+
+find_path(ICONV_INCLUDE_DIR iconv.h
+    HINTS
+    ${CMAKE_PREFIX_PATH}
+    ${ICONV_DIR}
+    $ENV{ICONV_DIR}
+    PATH_SUFFIXES include
+)
+
+if(NOT ICONV_INCLUDE_DIR STREQUAL "ICONV_INCLUDE_DIR-NOTFOUND")
+    check_function_exists(iconv_open ICONV_IN_GLIBC)
+endif()
+
+if(NOT ICONV_IN_GLIBC)
+    if (CMAKE_CL_64)
+        find_library(ICONV_LIBRARY
+            NAMES iconv64
+            HINTS
+            ${CMAKE_PREFIX_PATH}
+            ${ICONV_DIR}
+            $ENV{ICONV_DIR}
+            PATH_SUFFIXES lib64 lib
+            )
+    else()
+        find_library(ICONV_LIBRARY
+            NAMES iconv
+            HINTS
+            ${CMAKE_PREFIX_PATH}
+            ${ICONV_DIR}
+            $ENV{ICONV_DIR}
+            PATH_SUFFIXES lib64 lib
+            )
+    endif()
+    set(ICONV_TEST ${ICONV_LIBRARY})
+else()
+    set(ICONV_TEST "In glibc")
+endif()
+
+set(CMAKE_REQUIRED_INCLUDES ${ICONV_INCLUDE_DIR})
+set(CMAKE_REQUIRED_LIBRARIES ${ICONV_LIBRARY})
+
+check_cxx_source_compiles(
+    "#include <iconv.h>
+     int main() {
+        iconv(iconv_t(-1), 0, 0, 0, 0);
+     }"
+    ICONV_COMPILES)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(ICONV DEFAULT_MSG ICONV_TEST ICONV_INCLUDE_DIR ICONV_COMPILES)
+
+if(ICONV_FOUND)
+    set(ICONV_LIBRARIES ${ICONV_LIBRARY})
+    set(CMAKE_REQUIRED_INCLUDES ${ICONV_INCLUDE_DIR})
+    set(CMAKE_REQUIRED_LIBRARIES ${ICONV_LIBRARIES})
+
+    if (NOT DEFINED ICONV_ACCEPTS_NONCONST_INPUT)
+        # Display a useful message first time we come through here
+        message(STATUS "One (and only one) of the ICONV_ACCEPTS_... tests must pass")
+    endif()
+    check_cxx_source_compiles(
+        "#include <iconv.h>
+         int main() {
+            char *p = 0;
+            iconv(iconv_t(-1), &p, 0, 0, 0);
+         }"
+        ICONV_ACCEPTS_NONCONST_INPUT)
+
+    check_cxx_source_compiles(
+        "#include <iconv.h>
+         int main() {
+            char const *p = 0;
+            iconv(iconv_t(-1), &p, 0, 0, 0);
+         }"
+        ICONV_ACCEPTS_CONST_INPUT)
+
+    if (ICONV_LIBRARY)
+        list(REMOVE_ITEM CMAKE_REQUIRED_LIBRARIES ${ICONV_LIBRARY})
+        list(REMOVE_DUPLICATES CMAKE_REQUIRED_LIBRARIES)
+    endif()
+endif()
+
+if(NOT ICONV_ACCEPTS_CONST_INPUT AND NOT ICONV_ACCEPTS_NONCONST_INPUT)
+  MESSAGE(FATAL_ERROR "Unable to determine iconv() signature")
+elseif(ICONV_ACCEPTS_CONST_INPUT AND ICONV_ACCEPTS_NONCONST_INPUT)
+  MESSAGE(FATAL_ERROR "Unable to determine iconv() signature - both test cases passed!")
+endif()
+
+mark_as_advanced(ICONV_LIBRARY ICONV_INCLUDE_DIR)
-- 
2.11.0

